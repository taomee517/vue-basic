{"remainingRequest":"F:\\code\\front\\vue-basic\\project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\code\\front\\vue-basic\\project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\front\\vue-basic\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\front\\vue-basic\\project\\src\\ref-sign\\components\\UserForm.vue?vue&type=template&id=20049529&","dependencies":[{"path":"F:\\code\\front\\vue-basic\\project\\src\\ref-sign\\components\\UserForm.vue","mtime":1628350888953},{"path":"F:\\code\\front\\vue-basic\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628341691218},{"path":"F:\\code\\front\\vue-basic\\project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1628341714905},{"path":"F:\\code\\front\\vue-basic\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628341691218},{"path":"F:\\code\\front\\vue-basic\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":1628341714875}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"form\", [\n      _c(\"label\", { attrs: { for: \"username\" } }, [_vm._v(\"姓名：\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.username,\n            expression: \"username\"\n          }\n        ],\n        attrs: { id: \"username\", type: \"text\", placeholder: \"username\" },\n        domProps: { value: _vm.username },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.username = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", { attrs: { for: \"phone\" } }, [_vm._v(\"手机：\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.phone,\n            expression: \"phone\"\n          }\n        ],\n        attrs: { id: \"phone\", type: \"text\", placeholder: \"phone number\" },\n        domProps: { value: _vm.phone },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.phone = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", { attrs: { for: \"age\" } }, [_vm._v(\"年龄：\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model.number\",\n            value: _vm.age,\n            expression: \"age\",\n            modifiers: { number: true }\n          }\n        ],\n        attrs: { id: \"age\", type: \"text\", placeholder: \"age\" },\n        domProps: { value: _vm.age },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.age = _vm._n($event.target.value)\n          },\n          blur: function($event) {\n            return _vm.$forceUpdate()\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", [_vm._v(\"性别：\")]),\n      _c(\"label\", { attrs: { for: \"gender-male\" } }, [_vm._v(\"男\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.gender,\n            expression: \"gender\"\n          }\n        ],\n        attrs: { id: \"gender-male\", type: \"radio\", value: \"男\" },\n        domProps: { checked: _vm._q(_vm.gender, \"男\") },\n        on: {\n          change: function($event) {\n            _vm.gender = \"男\"\n          }\n        }\n      }),\n      _c(\"label\", { attrs: { for: \"gender-female\" } }, [_vm._v(\"女\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.gender,\n            expression: \"gender\"\n          }\n        ],\n        attrs: { id: \"gender-female\", type: \"radio\", value: \"女\" },\n        domProps: { checked: _vm._q(_vm.gender, \"女\") },\n        on: {\n          change: function($event) {\n            _vm.gender = \"女\"\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", [_vm._v(\"爱好：\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.hobbies,\n            expression: \"hobbies\"\n          }\n        ],\n        attrs: { id: \"hobbies-basketball\", type: \"checkbox\", value: \"篮球\" },\n        domProps: {\n          checked: Array.isArray(_vm.hobbies)\n            ? _vm._i(_vm.hobbies, \"篮球\") > -1\n            : _vm.hobbies\n        },\n        on: {\n          change: function($event) {\n            var $$a = _vm.hobbies,\n              $$el = $event.target,\n              $$c = $$el.checked ? true : false\n            if (Array.isArray($$a)) {\n              var $$v = \"篮球\",\n                $$i = _vm._i($$a, $$v)\n              if ($$el.checked) {\n                $$i < 0 && (_vm.hobbies = $$a.concat([$$v]))\n              } else {\n                $$i > -1 &&\n                  (_vm.hobbies = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n              }\n            } else {\n              _vm.hobbies = $$c\n            }\n          }\n        }\n      }),\n      _c(\"label\", { attrs: { for: \"hobbies-basketball\" } }, [_vm._v(\"篮球\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.hobbies,\n            expression: \"hobbies\"\n          }\n        ],\n        attrs: { id: \"hobbies-football\", type: \"checkbox\", value: \"足球\" },\n        domProps: {\n          checked: Array.isArray(_vm.hobbies)\n            ? _vm._i(_vm.hobbies, \"足球\") > -1\n            : _vm.hobbies\n        },\n        on: {\n          change: function($event) {\n            var $$a = _vm.hobbies,\n              $$el = $event.target,\n              $$c = $$el.checked ? true : false\n            if (Array.isArray($$a)) {\n              var $$v = \"足球\",\n                $$i = _vm._i($$a, $$v)\n              if ($$el.checked) {\n                $$i < 0 && (_vm.hobbies = $$a.concat([$$v]))\n              } else {\n                $$i > -1 &&\n                  (_vm.hobbies = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n              }\n            } else {\n              _vm.hobbies = $$c\n            }\n          }\n        }\n      }),\n      _c(\"label\", { attrs: { for: \"hobbies-football\" } }, [_vm._v(\"足球\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.hobbies,\n            expression: \"hobbies\"\n          }\n        ],\n        attrs: { id: \"hobbies-music\", type: \"checkbox\", value: \"音乐\" },\n        domProps: {\n          checked: Array.isArray(_vm.hobbies)\n            ? _vm._i(_vm.hobbies, \"音乐\") > -1\n            : _vm.hobbies\n        },\n        on: {\n          change: function($event) {\n            var $$a = _vm.hobbies,\n              $$el = $event.target,\n              $$c = $$el.checked ? true : false\n            if (Array.isArray($$a)) {\n              var $$v = \"音乐\",\n                $$i = _vm._i($$a, $$v)\n              if ($$el.checked) {\n                $$i < 0 && (_vm.hobbies = $$a.concat([$$v]))\n              } else {\n                $$i > -1 &&\n                  (_vm.hobbies = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n              }\n            } else {\n              _vm.hobbies = $$c\n            }\n          }\n        }\n      }),\n      _c(\"label\", { attrs: { for: \"hobbies-music\" } }, [_vm._v(\"音乐\")]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", [_vm._v(\"城市：\")]),\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.city,\n              expression: \"city\"\n            }\n          ],\n          on: {\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.city = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            }\n          }\n        },\n        [\n          _c(\"option\", { attrs: { value: \"成都\" } }, [_vm._v(\"成都\")]),\n          _c(\"option\", { attrs: { value: \"重庆\" } }, [_vm._v(\"重庆\")]),\n          _c(\"option\", { attrs: { value: \"武汉\" } }, [_vm._v(\"武汉\")])\n        ]\n      ),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", { attrs: { for: \"motto\" } }, [_vm._v(\"座右铭：\")]),\n      _c(\"br\"),\n      _c(\"textarea\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model.lazy\",\n            value: _vm.motto,\n            expression: \"motto\",\n            modifiers: { lazy: true }\n          }\n        ],\n        staticClass: \"motto\",\n        attrs: { id: \"motto\" },\n        domProps: { value: _vm.motto },\n        on: {\n          change: function($event) {\n            _vm.motto = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"button\", value: \"注册\" },\n        on: { click: _vm.submit }\n      })\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}